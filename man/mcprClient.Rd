% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcpr-client.R
\name{mcprClient}
\alias{mcprClient}
\title{MCP Client}
\value{
New mcprClient instance
}
\description{
Persistent interface for managing Model Context Protocol servers within R sessions.
\strong{Server connections}: Establishes and maintains connections to MCP servers
\strong{Tool discovery}: Automatically discovers and registers available tools
\strong{Protocol communication}: Handles JSON-RPC messaging with servers
\strong{State management}: Maintains server status and tool metadata
\strong{Configuration support}: Uses JSON config files for server specifications
}
\section{Super class}{
\code{MCPR::BaseMCPR} -> \code{mcprClient}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-mcprClient-new}{\code{mcprClient$new()}}
\item \href{#method-mcprClient-connect_servers}{\code{mcprClient$connect_servers()}}
\item \href{#method-mcprClient-get_mcpr_tools}{\code{mcprClient$get_mcpr_tools()}}
\item \href{#method-mcprClient-call_tool}{\code{mcprClient$call_tool()}}
\item \href{#method-mcprClient-get_server_status}{\code{mcprClient$get_server_status()}}
\item \href{#method-mcprClient-as_mcpr_types}{\code{mcprClient$as_mcpr_types()}}
\item \href{#method-mcprClient-clone}{\code{mcprClient$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="cleanup_all"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-cleanup_all'><code>MCPR::BaseMCPR$cleanup_all()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="create_socket"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-create_socket'><code>MCPR::BaseMCPR$create_socket()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="get_component_name"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-get_component_name'><code>MCPR::BaseMCPR$get_component_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="initialize_base"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-initialize_base'><code>MCPR::BaseMCPR$initialize_base()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="is_initialized"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-is_initialized'><code>MCPR::BaseMCPR$is_initialized()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="register_cleanup"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-register_cleanup'><code>MCPR::BaseMCPR$register_cleanup()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="socket_url"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-socket_url'><code>MCPR::BaseMCPR$socket_url()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_clear"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_clear'><code>MCPR::BaseMCPR$state_clear()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_get"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_get'><code>MCPR::BaseMCPR$state_get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_has"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_has'><code>MCPR::BaseMCPR$state_has()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_keys_owned"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_keys_owned'><code>MCPR::BaseMCPR$state_keys_owned()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_set"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_set'><code>MCPR::BaseMCPR$state_set()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-new}{}}}
\subsection{Method \code{new()}}{
Creates new mcprClient instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$new(config = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{Path to configuration file (character). Uses default location if NULL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Self (invisible)
Establish connections to all configured MCP servers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-connect_servers"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-connect_servers}{}}}
\subsection{Method \code{connect_servers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$connect_servers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Self (invisible, enables method chaining)
Retrieve all discovered tools in MCPR-compatible format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-get_mcpr_tools"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-get_mcpr_tools}{}}}
\subsection{Method \code{get_mcpr_tools()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$get_mcpr_tools()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of MCPR tool objects
Execute specific tool on designated server
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-call_tool"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-call_tool}{}}}
\subsection{Method \code{call_tool()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$call_tool(..., server, tool)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named arguments for the tool}

\item{\code{server}}{Server name (character)}

\item{\code{tool}}{Tool name (character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Tool execution result
Retrieve status information for all connected servers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-get_server_status"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-get_server_status}{}}}
\subsection{Method \code{get_server_status()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$get_server_status()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list with server status details including name, connected status, tools_count, and last_id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-as_mcpr_types"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-as_mcpr_types}{}}}
\subsection{Method \code{as_mcpr_types()}}{
Convert tool schema to MCPR types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$as_mcpr_types(tool)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tool}}{Tool definition object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Converted tool types
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-mcprClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
