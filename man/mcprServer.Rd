% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcpr-server.R
\name{mcprServer}
\alias{mcprServer}
\title{MCP Server}
\description{
Implements Model Context Protocol server for persistent R session management.
Operates through nanonext sockets for non-blocking message handling between JSON-RPC
clients and R sessions, enabling tool execution routing and workspace state persistence.
}
\details{
Server operates through layered message handling:
\itemize{
\item \strong{Client Layer}: Handles JSON-RPC communication with MCP clients
\item \strong{Server Layer}: Manages tool execution and session routing
\item \strong{Session Layer}: Forwards requests to active R sessions
}
}
\note{
This method should only be called in non-interactive contexts because it blocks execution
}
\examples{
\dontrun{
# Basic server initialization
server <- mcprServer$new()
server$start() # Blocking call

# Server with custom tools
my_tool <- list(
  name = "mean",
  description = "Calculate arithmetic mean",
  fun = mean,
  arguments = list(x = "numeric")
)
registry <- ToolRegistry$new()
registry$add_tool(my_tool)
server <- mcprServer$new(registry = registry)
server$start()

# Using convenience function
registry <- ToolRegistry$new(tools_dir = "path/to/tools")
mcpr_server(registry = registry)
}
}
\section{Super class}{
\code{MCPR::BaseMCPR} -> \code{mcprServer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-mcprServer-new}{\code{mcprServer$new()}}
\item \href{#method-mcprServer-start}{\code{mcprServer$start()}}
\item \href{#method-mcprServer-stop}{\code{mcprServer$stop()}}
\item \href{#method-mcprServer-is_running}{\code{mcprServer$is_running()}}
\item \href{#method-mcprServer-get_tools}{\code{mcprServer$get_tools()}}
\item \href{#method-mcprServer-get_capabilities}{\code{mcprServer$get_capabilities()}}
\item \href{#method-mcprServer-clone}{\code{mcprServer$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="cleanup_all"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-cleanup_all'><code>MCPR::BaseMCPR$cleanup_all()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="create_socket"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-create_socket'><code>MCPR::BaseMCPR$create_socket()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="get_component_name"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-get_component_name'><code>MCPR::BaseMCPR$get_component_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="initialize_base"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-initialize_base'><code>MCPR::BaseMCPR$initialize_base()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="is_initialized"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-is_initialized'><code>MCPR::BaseMCPR$is_initialized()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="register_cleanup"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-register_cleanup'><code>MCPR::BaseMCPR$register_cleanup()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="socket_url"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-socket_url'><code>MCPR::BaseMCPR$socket_url()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_clear"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_clear'><code>MCPR::BaseMCPR$state_clear()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_get"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_get'><code>MCPR::BaseMCPR$state_get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_has"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_has'><code>MCPR::BaseMCPR$state_has()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_keys_owned"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_keys_owned'><code>MCPR::BaseMCPR$state_keys_owned()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_set"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_set'><code>MCPR::BaseMCPR$state_set()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-new"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-new}{}}}
\subsection{Method \code{new()}}{
Initialize the MCP server with optional tools
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$new(registry = NULL, .tools_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{registry}}{A ToolRegistry instance to use for tool discovery}

\item{\code{.tools_dir}}{Internal parameter for specifying tools directory path}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new mcprServer instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-start"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-start}{}}}
\subsection{Method \code{start()}}{
Start the MCP server and begin listening for connections
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$start()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
No return value (blocking call)
Stop the running server with graceful shutdown and resource cleanup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-stop"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-stop}{}}}
\subsection{Method \code{stop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$stop(timeout_ms = 5000)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeout_ms}}{Timeout in milliseconds for graceful shutdown (default: 5000)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The server instance (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-is_running"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-is_running}{}}}
\subsection{Method \code{is_running()}}{
Check if the server is currently running
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$is_running()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if server is running, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-get_tools"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-get_tools}{}}}
\subsection{Method \code{get_tools()}}{
Get server tools in the specified format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$get_tools(format = c("list", "json"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{Character string specifying output format: "list" (default) or "json"}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
For "list": named list of ToolDef objects. For "json": list suitable for JSON serialization
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-get_capabilities"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-get_capabilities}{}}}
\subsection{Method \code{get_capabilities()}}{
Get server capabilities for MCP protocol
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$get_capabilities()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of server capabilities
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprServer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-mcprServer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprServer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
