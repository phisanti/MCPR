% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install-mcpr.R
\name{install_mcpr}
\alias{install_mcpr}
\title{Install MCPR for AI Agents}
\usage{
install_mcpr(agent = NULL, scope = NULL, server_name = "mcpr", force = FALSE)
}
\arguments{
\item{agent}{Character string specifying which agent to configure.
Must be one of: "claude", "gemini", "copilot". If NULL, displays helpful usage guide.}

\item{scope}{Character. Configuration scope for the agent. If NULL, uses the recommended default.
For Claude: "local" (desktop), "project" (.mcp.json), "user" (code config).
For Copilot: "workspace" (.vscode/mcp.json), "user" (profile config), "remote" (remote config).
For Gemini: "global" (settings.json), "project" (extensions), "ide" (IDE-specific config).}

\item{server_name}{Character. Name for the MCPR server in configuration (default: "mcpr")}

\item{force}{Logical. If TRUE, overwrites existing MCPR configuration without asking (default: FALSE)}
}
\value{
Invisible list with installation result for the specified agent
}
\description{
Configures MCPR MCP server for specified AI agents with cross-platform support.
Automatically detects configuration file locations, safely modifies existing configurations,
and provides validation instructions. Supports Claude Code, Claude Desktop, GitHub Copilot,
and Gemini CLI with appropriate error handling and user permission requests.
}
\details{
Install MCPR for AI Agents
}
\examples{
\dontrun{
# Install for Claude Code (local scope)
install_mcpr("claude")

# Install for different agents (one at a time)
install_mcpr("gemini")
install_mcpr("copilot")

# Install with custom server name
install_mcpr("claude", server_name = "my-r-server")

# Force overwrite existing configuration
install_mcpr("gemini", force = TRUE)
}
}
