% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tool-register.R
\name{ToolRegistry}
\alias{ToolRegistry}
\title{Tool Registry}
\description{
Automatically discovers and registers R functions as MCP tools through roxygen2 parsing.
Scans R files for functions tagged with mcpr_tool keyword and converts documentation
into structured tool specifications. Enables tool discovery and validation for MCP
protocol integration through automated function metadata extraction.
}
\details{
Tool Registry for MCPR Framework

Provides comprehensive tool management:
\itemize{
\item \strong{Automatic Discovery}: Scans directories for tagged functions
\item \strong{Documentation Parsing}: Converts roxygen2 comments to tool specs
\item \strong{Type Mapping}: Maps parameter types to MCPR specifications
\item \strong{Validation}: Checks for naming conflicts and protocol compliance
}
}
\examples{
\dontrun{
# Basic usage
registry <- ToolRegistry$new()
tools <- registry$search_tools()

# Custom configuration
registry <- ToolRegistry$new(
  tools_dir = "custom/tools",
  pattern = "\\\\.R$",
  recursive = TRUE
)

# Get tool information
summary <- registry$get_tool_summary()
if (registry$has_tool("my_function")) {
  tool <- registry$get_tool("my_function")
}
}

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToolRegistry-new}{\code{ToolRegistry$new()}}
\item \href{#method-ToolRegistry-search_tools}{\code{ToolRegistry$search_tools()}}
\item \href{#method-ToolRegistry-get_tools}{\code{ToolRegistry$get_tools()}}
\item \href{#method-ToolRegistry-get_tool_summary}{\code{ToolRegistry$get_tool_summary()}}
\item \href{#method-ToolRegistry-has_tool}{\code{ToolRegistry$has_tool()}}
\item \href{#method-ToolRegistry-get_tool}{\code{ToolRegistry$get_tool()}}
\item \href{#method-ToolRegistry-configure}{\code{ToolRegistry$configure()}}
\item \href{#method-ToolRegistry-set_verbose}{\code{ToolRegistry$set_verbose()}}
\item \href{#method-ToolRegistry-print}{\code{ToolRegistry$print()}}
\item \href{#method-ToolRegistry-clone}{\code{ToolRegistry$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-new"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-new}{}}}
\subsection{Method \code{new()}}{
Create a new ToolRegistry instance with specified configuration
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$new(
  tools_dir = "inst",
  pattern = "tool-.*\\\\.R$",
  recursive = FALSE,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tools_dir}}{Directory path to scan for tool files (default: "inst")}

\item{\code{pattern}}{File pattern to match (regex) (default: "tool-.*\\.R$")}

\item{\code{recursive}}{Whether to search subdirectories (default: FALSE)}

\item{\code{verbose}}{Enable verbose output during search (default: FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
New ToolRegistry instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-search_tools"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-search_tools}{}}}
\subsection{Method \code{search_tools()}}{
Scan configured directory for functions tagged with mcpr_tool keyword
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$search_tools(force_refresh = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{force_refresh}}{Force re-scanning even if tools are cached (default: FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of MCPR tool objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-get_tools"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-get_tools}{}}}
\subsection{Method \code{get_tools()}}{
Return currently loaded tools without re-scanning
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$get_tools()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of MCPR tool objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-get_tool_summary"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-get_tool_summary}{}}}
\subsection{Method \code{get_tool_summary()}}{
Generate data.frame summary of loaded tools with metadata
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$get_tool_summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Data.frame with columns: name, description, parameters
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-has_tool"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-has_tool}{}}}
\subsection{Method \code{has_tool()}}{
Check if tool with specified name exists in registry
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$has_tool(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the tool to check}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if tool exists, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-get_tool"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-get_tool}{}}}
\subsection{Method \code{get_tool()}}{
Retrieve specific tool by name from registry
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$get_tool(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the tool to retrieve}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
MCPR tool object or NULL if not found
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-configure"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-configure}{}}}
\subsection{Method \code{configure()}}{
Update search configuration and reset cached tools
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$configure(tools_dir = NULL, pattern = NULL, recursive = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tools_dir}}{New directory path (optional)}

\item{\code{pattern}}{New file pattern (optional)}

\item{\code{recursive}}{New recursive setting (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Self (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-set_verbose"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-set_verbose}{}}}
\subsection{Method \code{set_verbose()}}{
Enable or disable verbose output during search operations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$set_verbose(verbose)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{TRUE to enable verbose output, FALSE to disable}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Self (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-print"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-print}{}}}
\subsection{Method \code{print()}}{
Print summary of ToolRegistry with directory and tool information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Self (invisibly)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToolRegistry-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToolRegistry-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToolRegistry$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
