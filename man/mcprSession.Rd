% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcpr-session.R
\name{mcprSession}
\alias{mcprSession}
\title{MCP Session}
\description{
R6 class for managing MCP session communication with timeout management.
Encapsulates session state while maintaining compatibility with existing global state
for server communication. Provides automatic resource cleanup and session lifecycle
management.
}
\details{
MCP Session Management Class

Handles session lifecycle:
\itemize{
\item \strong{Socket Management}: Creates and binds nanonext sockets for communication
\item \strong{Message Processing}: Async tool execution and response handling
\item \strong{Timeout Management}: Automatic session cleanup after inactivity
\item \strong{Resource Cleanup}: Proper socket and state resource management
}
}
\section{Super class}{
\code{MCPR::BaseMCPR} -> \code{mcprSession}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-mcprSession-new}{\code{mcprSession$new()}}
\item \href{#method-mcprSession-start}{\code{mcprSession$start()}}
\item \href{#method-mcprSession-check_timeout}{\code{mcprSession$check_timeout()}}
\item \href{#method-mcprSession-stop}{\code{mcprSession$stop()}}
\item \href{#method-mcprSession-get_info}{\code{mcprSession$get_info()}}
\item \href{#method-mcprSession-clone}{\code{mcprSession$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="cleanup_all"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-cleanup_all'><code>MCPR::BaseMCPR$cleanup_all()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="create_socket"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-create_socket'><code>MCPR::BaseMCPR$create_socket()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="get_component_name"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-get_component_name'><code>MCPR::BaseMCPR$get_component_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="initialize_base"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-initialize_base'><code>MCPR::BaseMCPR$initialize_base()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="is_initialized"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-is_initialized'><code>MCPR::BaseMCPR$is_initialized()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="register_cleanup"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-register_cleanup'><code>MCPR::BaseMCPR$register_cleanup()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="socket_url"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-socket_url'><code>MCPR::BaseMCPR$socket_url()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_clear"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_clear'><code>MCPR::BaseMCPR$state_clear()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_get"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_get'><code>MCPR::BaseMCPR$state_get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_has"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_has'><code>MCPR::BaseMCPR$state_has()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_keys_owned"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_keys_owned'><code>MCPR::BaseMCPR$state_keys_owned()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MCPR" data-topic="BaseMCPR" data-id="state_set"><a href='../../MCPR/html/BaseMCPR.html#method-BaseMCPR-state_set'><code>MCPR::BaseMCPR$state_set()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-new"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-new}{}}}
\subsection{Method \code{new()}}{
Create new mcprSession instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$new(timeout_seconds = 900)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeout_seconds}}{Timeout in seconds (default: 900)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new mcprSession instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-start"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-start}{}}}
\subsection{Method \code{start()}}{
Start the MCP session in interactive contexts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$start()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Self (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-check_timeout"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-check_timeout}{}}}
\subsection{Method \code{check_timeout()}}{
Check for session timeout and cleanup if expired
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$check_timeout()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Self (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-stop"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-stop}{}}}
\subsection{Method \code{stop()}}{
Stop session and cleanup resources
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$stop()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Self (invisibly) for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-get_info"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-get_info}{}}}
\subsection{Method \code{get_info()}}{
Get session information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$get_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with session details
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mcprSession-clone"></a>}}
\if{latex}{\out{\hypertarget{method-mcprSession-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mcprSession$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
